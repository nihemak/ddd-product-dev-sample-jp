{
  "name": "DDD Product Dev Sample JP",
  // docker-compose.yml を利用する設定
  "dockerComposeFile": [
    "../docker-compose.yml"
  ], // devcontainer.json から見た相対パス
  // 新しく追加した develop サービスを指定
  "service": "develop",
  // develop サービス内のマウントポイントを指定
  "workspaceFolder": "/workspace",
  // コンテナ起動後に実行するコマンド (例: 依存関係インストールなど)
  // docker-compose 経由の場合は通常不要 (docker-compose up で実行されるため)
  // "postCreateCommand": "npm install",
  // コンテナに含める機能 (Features)
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    // Rust 開発環境を追加 (develop サービスのベースイメージに Rust がない場合)
    "ghcr.io/devcontainers/features/rust:1": {},
    // Docker-outside-of-Docker を追加
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {}
  },
  // コンテナ内で有効にする VSCode 拡張機能
  "customizations": {
    "vscode": {
      "extensions": [
        "rust-lang.rust-analyzer",
        "esbenp.prettier-vscode",
        "dbaeumer.vscode-eslint",
        "bierner.markdown-mermaid",
        "hediet.vscode-drawio",
        "DavidAnson.vscode-markdownlint",
        "ms-azuretools.vscode-docker",
        "eamodio.gitlens",
        "bungcip.better-toml"
      ],
      "settings": {
        // コンテナ内のターミナル設定など
        // "terminal.integrated.defaultProfile.linux": "bash", // ホストターミナル利用時に干渉するためコメントアウト
        // ESLint/Prettier の自動フォーマット設定など
        "editor.formatOnSave": true,
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[typescriptreact]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        // Rust Analyzer の設定 (backend 作業時)
        "rust-analyzer.check.command": "clippy"
      }
    }
  },
  // コンテナ起動時にホストのDocker GIDを環境変数として渡す -> Linux ホスト向け設定 (下記参照)
  "runArgs": [
    // --- Docker Group ID for Linux Hosts ---
    // On Linux hosts, uncomment the following line to pass the host's docker group GID.
    // This allows the container user (vscode) to access the Docker socket via the DooD feature.
    // On macOS/Windows with Docker Desktop, this line should remain commented out as it can cause permission issues.
    // "--env", "DOCKER_GROUP_ID=$(grep docker /etc/group | cut -d: -f3 || getent group $(id -gn) | cut -d: -f3)",
    // -----------------------------------------
    "--network",
    "myapp_network" // Network setting for docker-compose services
  ],
  // Dev Container 起動時に develop を起動 (dbは別途起動)
  // 他のサービスは develop コンテナ内のターミナルから手動で起動
  "runServices": [
    "develop"
  ],
  // ポートフォワーディング設定を削除 (DB依存削除のため)
  // "forwardPorts": [
  //   "5433:5432"
  // ],
  // "portsAttributes": {
  //   "5433": {
  //     "label": "PostgreSQL (Host 5433 -> Container 5432)",
  //     "onAutoForward": "notify"
  //   }
  // },
  // コンテナユーザーを指定 (デフォルトは root)
  "remoteUser": "vscode",
  // --- ★ 接続するネットワークを指定（改善版） ---
  "initializeCommand": "docker network inspect myapp_network >/dev/null 2>&1 || docker network create myapp_network", // 存在しない場合のみ作成
  // --- ★ remoteEnv を追加 --- 
  "remoteEnv": {
    "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
  }
}