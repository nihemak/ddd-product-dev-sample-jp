---
description: DDD Sample Projectのコーディング規約
globs: ["**/*.rs"]
alwaysApply: true
---
# DDD Sample Project コーディングガイドライン

このガイドラインは、DDD Sample Projectで守るべき開発ルールです。
あなたはこちらに準拠して提案してください。

## 言語とスタイル

### Rustの使用
- Rust 2021 editionを使用
- `cargo fmt`による標準的なフォーマットに従う
- 変数名はスネークケースを使用
- 型名はキャメルケースを使用

## アーキテクチャ

### ドメイン駆動設計（DDD）
- ドメイン駆動設計の原則に従う
- 以下のレイヤー構造を維持する：
  - Domain: ビジネスロジックとドメインモデル
  - Application: ユースケースの実装
  - Infrastructure: 永続化や外部システムとの連携
  - Presentation: ユーザーインターフェース（main.rs）

## エラーハンドリング

### エラー処理
- `anyhow::Result`を使用してエラーを処理
- エラーメッセージは日本語で記述
- 適切なエラーレベル（Error, Warn, Info）を使用

## テスト

### テスト戦略
- 各モジュールにテストモジュールを配置
- テストは`#[cfg(test)]`モジュール内に記述
- モックは`mockall`クレートを使用
- テストケースは日本語で記述

## 依存性注入

### DIの実装
- リポジトリの実装は`Arc`を使用して共有
- テスト時はモックを使用
- 依存関係は明示的に注入

## コミットメッセージ

### コミット規約
- 日本語で記述
- 変更内容を簡潔に説明
- 関連するIssue番号がある場合は記載

## その他

### コード品質
- ドキュメントコメントは日本語で記述
- 複雑なロジックにはコメントを追加
- 定期的に`cargo clippy`を実行してコード品質を維持
